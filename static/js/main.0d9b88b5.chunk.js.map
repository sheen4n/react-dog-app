{"version":3,"sources":["images/whiskey.jpg","images/tubby.jpg","images/hazel.jpg","DogsData.js","NavBar.js","DogList.js","DogDetails.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","dogs","name","age","src","whiskey","facts","hazel","tubby","NavBar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","exact","map","dog","key","DogList","alt","withRouter","match","params","find","toLowerCase","fact","i","Routes","path","render","DogDetails","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0d9b88b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whiskey.5c1e3b17.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tubby.2f47cb65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hazel.4eb85e80.jpg\";","import whiskey from './images/whiskey.jpg';\r\nimport tubby from './images/tubby.jpg';\r\nimport hazel from './images/hazel.jpg';\r\n\r\nexport const dogs = [\r\n  {\r\n    name: 'Whiskey',\r\n    age: 5,\r\n    src: whiskey,\r\n    facts: [\r\n      'Whiskey loves eating popcorn.',\r\n      'Whiskey is a terrible guard dog.',\r\n      'Whiskey wants to cuddle with you!'\r\n    ]\r\n  },\r\n  {\r\n    name: 'Hazel',\r\n    age: 3,\r\n    src: hazel,\r\n    facts: [\r\n      'Hazel has soooo much energy!',\r\n      'Hazel is highly intelligent.',\r\n      'Hazel loves people more than dogs.'\r\n    ]\r\n  },\r\n  {\r\n    name: 'Tubby',\r\n    age: 4,\r\n    src: tubby,\r\n    facts: [\r\n      'Tubby is not the brightest dog',\r\n      'Tubby does not like walks or exercise.',\r\n      'Tubby loves eating food.'\r\n    ]\r\n  }\r\n];\r\n","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { dogs } from './DogsData';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand\" to=\"/dogs\">\r\n        Dog App\r\n      </Link>\r\n\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink exact to=\"/dogs\" className=\"nav-link\">\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          {dogs.map(dog => (\r\n            <li className=\"nav-item\" key={dog.name}>\r\n              <NavLink exact to={`/dogs/${dog.name}`} className=\"nav-link\">\r\n                {dog.name}\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './DogList.css';\r\nimport { dogs } from './DogsData';\r\n\r\nconst DogList = () => {\r\n  return (\r\n    <div className=\"DogList\">\r\n      <h1 className=\"display-1 text-center mt-3 mb-5\">Dog List!</h1>\r\n      <div className=\"row\">\r\n        {dogs.map(dog => (\r\n          <div className=\"Dog col-lg-4 text-center\" key={dog.name}>\r\n            <img src={dog.src} alt={dog.name} />\r\n            <h3 className=\"mt-3\">\r\n              <Link className=\"underline\" to={`/dogs/${dog.name}`}>\r\n                {dog.name}\r\n              </Link>\r\n            </h3>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DogList;\r\n","import React from 'react';\r\nimport { Redirect, withRouter, Link } from 'react-router-dom';\r\nimport './DogDetails.css';\r\nimport { dogs } from './DogsData';\r\n\r\nconst DogDetails = ({ match }) => {\r\n  const name = match.params.name;\r\n  const dog = dogs.find(dog => dog.name.toLowerCase() === name.toLowerCase());\r\n\r\n  if (!dog) return <Redirect to=\"/dogs\" />;\r\n\r\n  return (\r\n    <div className=\"DogDetails row justify-content-center mt-5\">\r\n      <div className=\"col-11 col-lg-5\">\r\n        <div className=\"DogDetails-card card\">\r\n          <img className=\"card-img-top\" src={dog.src} alt={dog.name} />\r\n          <div className=\"card-body\">\r\n            <h2 className=\"card-title\">{dog.name}</h2>\r\n            <h4 className=\"card-subtitle text-muted\">{dog.age} years old</h4>\r\n          </div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {dog.facts.map((fact, i) => (\r\n              <li className=\"list-group-item\" key={i}>\r\n                {fact}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"card-body\">\r\n            <Link to=\"/dogs\" className=\"btn btn-info\">\r\n              Go Back\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(DogDetails);\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport DogList from './DogList';\r\nimport DogDetails from './DogDetails';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/dogs\" render={DogList} />\r\n      <Route exact path=\"/dogs/:name\" render={DogDetails} />\r\n      <Redirect to=\"/dogs\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport './App.css';\nimport NavBar from './NavBar';\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <div className=\"container\">\n        <Routes />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}